// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BuyInvoice extends ethereum.Event {
  get params(): BuyInvoice__Params {
    return new BuyInvoice__Params(this);
  }
}

export class BuyInvoice__Params {
  _event: BuyInvoice;

  constructor(event: BuyInvoice) {
    this._event = event;
  }

  get invoiceId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RepayInvoice extends ethereum.Event {
  get params(): RepayInvoice__Params {
    return new RepayInvoice__Params(this);
  }
}

export class RepayInvoice__Params {
  _event: RepayInvoice;

  constructor(event: RepayInvoice) {
    this._event = event;
  }

  get invoiceId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get payer(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RewardsWithdrawed extends ethereum.Event {
  get params(): RewardsWithdrawed__Params {
    return new RewardsWithdrawed__Params(this);
  }
}

export class RewardsWithdrawed__Params {
  _event: RewardsWithdrawed;

  constructor(event: RewardsWithdrawed) {
    this._event = event;
  }

  get invoiceID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get balance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokenAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Factoring__invoicesResult {
  value0: i32;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: Address;
  value6: Address;
  value7: Address;

  constructor(
    value0: i32,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: Address,
    value6: Address,
    value7: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    map.set("value6", ethereum.Value.fromAddress(this.value6));
    map.set("value7", ethereum.Value.fromAddress(this.value7));
    return map;
  }

  getStatus(): i32 {
    return this.value0;
  }

  getRepaymentAmount(): BigInt {
    return this.value1;
  }

  getFractionalPrice(): BigInt {
    return this.value2;
  }

  getAmountRepaid(): BigInt {
    return this.value3;
  }

  getBlockNumber(): BigInt {
    return this.value4;
  }

  getIssuer(): Address {
    return this.value5;
  }

  getReceiver(): Address {
    return this.value6;
  }

  getToken(): Address {
    return this.value7;
  }
}

export class Factoring extends ethereum.SmartContract {
  static bind(address: Address): Factoring {
    return new Factoring("Factoring", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  INVOICE_FACTORY(): Bytes {
    let result = super.call(
      "INVOICE_FACTORY",
      "INVOICE_FACTORY():(bytes3)",
      []
    );

    return result[0].toBytes();
  }

  try_INVOICE_FACTORY(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "INVOICE_FACTORY",
      "INVOICE_FACTORY():(bytes3)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  calculateFraction(principalAmount: BigInt, periods: BigInt): BigInt {
    let result = super.call(
      "calculateFraction",
      "calculateFraction(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(principalAmount),
        ethereum.Value.fromUnsignedBigInt(periods)
      ]
    );

    return result[0].toBigInt();
  }

  try_calculateFraction(
    principalAmount: BigInt,
    periods: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateFraction",
      "calculateFraction(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(principalAmount),
        ethereum.Value.fromUnsignedBigInt(periods)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  discountRate(): BigInt {
    let result = super.call("discountRate", "discountRate():(uint256)", []);

    return result[0].toBigInt();
  }

  try_discountRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("discountRate", "discountRate():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  invoice(): Address {
    let result = super.call("invoice", "invoice():(address)", []);

    return result[0].toAddress();
  }

  try_invoice(): ethereum.CallResult<Address> {
    let result = super.tryCall("invoice", "invoice():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  invoices(param0: BigInt): Factoring__invoicesResult {
    let result = super.call(
      "invoices",
      "invoices(uint256):(uint8,uint256,uint256,uint256,uint256,address,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Factoring__invoicesResult(
      result[0].toI32(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toAddress(),
      result[6].toAddress(),
      result[7].toAddress()
    );
  }

  try_invoices(param0: BigInt): ethereum.CallResult<Factoring__invoicesResult> {
    let result = super.tryCall(
      "invoices",
      "invoices(uint256):(uint8,uint256,uint256,uint256,uint256,address,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Factoring__invoicesResult(
        value[0].toI32(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toAddress(),
        value[6].toAddress(),
        value[7].toAddress()
      )
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _invoice(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveInvoiceCall extends ethereum.Call {
  get inputs(): ApproveInvoiceCall__Inputs {
    return new ApproveInvoiceCall__Inputs(this);
  }

  get outputs(): ApproveInvoiceCall__Outputs {
    return new ApproveInvoiceCall__Outputs(this);
  }
}

export class ApproveInvoiceCall__Inputs {
  _call: ApproveInvoiceCall;

  constructor(call: ApproveInvoiceCall) {
    this._call = call;
  }

  get invoiceID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ApproveInvoiceCall__Outputs {
  _call: ApproveInvoiceCall;

  constructor(call: ApproveInvoiceCall) {
    this._call = call;
  }
}

export class BuyInvoiceCall extends ethereum.Call {
  get inputs(): BuyInvoiceCall__Inputs {
    return new BuyInvoiceCall__Inputs(this);
  }

  get outputs(): BuyInvoiceCall__Outputs {
    return new BuyInvoiceCall__Outputs(this);
  }
}

export class BuyInvoiceCall__Inputs {
  _call: BuyInvoiceCall;

  constructor(call: BuyInvoiceCall) {
    this._call = call;
  }

  get invoiceID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get fractions(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BuyInvoiceCall__Outputs {
  _call: BuyInvoiceCall;

  constructor(call: BuyInvoiceCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RepayInvoiceCall extends ethereum.Call {
  get inputs(): RepayInvoiceCall__Inputs {
    return new RepayInvoiceCall__Inputs(this);
  }

  get outputs(): RepayInvoiceCall__Outputs {
    return new RepayInvoiceCall__Outputs(this);
  }
}

export class RepayInvoiceCall__Inputs {
  _call: RepayInvoiceCall;

  constructor(call: RepayInvoiceCall) {
    this._call = call;
  }

  get invoiceID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RepayInvoiceCall__Outputs {
  _call: RepayInvoiceCall;

  constructor(call: RepayInvoiceCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetDiscountRateCall extends ethereum.Call {
  get inputs(): SetDiscountRateCall__Inputs {
    return new SetDiscountRateCall__Inputs(this);
  }

  get outputs(): SetDiscountRateCall__Outputs {
    return new SetDiscountRateCall__Outputs(this);
  }
}

export class SetDiscountRateCall__Inputs {
  _call: SetDiscountRateCall;

  constructor(call: SetDiscountRateCall) {
    this._call = call;
  }

  get newDiscount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDiscountRateCall__Outputs {
  _call: SetDiscountRateCall;

  constructor(call: SetDiscountRateCall) {
    this._call = call;
  }
}

export class SetInvoiceCall extends ethereum.Call {
  get inputs(): SetInvoiceCall__Inputs {
    return new SetInvoiceCall__Inputs(this);
  }

  get outputs(): SetInvoiceCall__Outputs {
    return new SetInvoiceCall__Outputs(this);
  }
}

export class SetInvoiceCall__Inputs {
  _call: SetInvoiceCall;

  constructor(call: SetInvoiceCall) {
    this._call = call;
  }

  get invoiceID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get repaymentAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get fractionalPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get issuer(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get receiver(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class SetInvoiceCall__Outputs {
  _call: SetInvoiceCall;

  constructor(call: SetInvoiceCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get invoiceID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
